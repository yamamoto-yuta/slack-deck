# This is a basic workflow to help you get started with Actions

name: release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [issue-**]
  # pull_request:
  #   branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # - uses: actions/setup-node@v2-beta
      #   with:
      #     node-version: "14"
      # - name: Build
      #   run: |
      #     cd slackdeck/
      #     npm i
      #     npm run dev
      #     npm run build
      #     echo 'Build complete!'
      # - name: Zip
      #   run: |
      #     cd slackdeck/dist/
      #     zip release.zip *.*
      #     pwd
      #     echo 'Zip complete!'

      - name: Create new tag
        id: create_tag
        run: |
          apt-get install jq
          cat slackdeck/dist/manifest.json | jq -r '.version'
          VERSION=$(cat slackdeck/dist/manifest.json | jq -r '.version')
          echo "::set-output name=new_tag::$VERSION"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: test_v${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

  # # Runs a single command using the runners shell
  # - name: Run a one-line script
  #   run: echo Hello, world!

  # # Runs a set of commands using the runners shell
  # - name: Run a multi-line script
  #   run: |
  #     echo Add other actions to build,
  #     echo test, and deploy your project.
